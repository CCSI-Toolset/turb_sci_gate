//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "ApplicationOutputFileType", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Application), "OutputFileType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.OutputFileType), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "ApplicationInputFileType", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Application), "InputFileType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.InputFileType), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "SimulationApplication", "Simulation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.Simulation), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Application), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "JobSinterProcess", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Job), "SinterProcess", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.SinterProcess))]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "StatgedOutputFileOutputFileType", "StatgedOutputFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.StatgedOutputFile), "OutputFileType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.OutputFileType))]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "StagedInputFileInputFileType", "StagedInputFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.StagedInputFile), "InputFileType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.InputFileType))]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "SinterProcessError", "SinterProcess", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.SinterProcess), "ProcessError", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.ProcessError), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "JobMessage", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Job), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.Message), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "SessionJob", "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Session), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.Job), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "UserApplication", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Turbine.Data.User), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.Application), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "UserJob", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.User), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.Job), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "UserSession", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.User), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.Session), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "ConsumerJob", "Consumer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Turbine.Data.JobConsumer), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.Job), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "SimulationStagedInputInputFileType", "SimulationStagedInput", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.SimulationStagedInput), "InputFileType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.InputFileType))]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "JobStatgedOutputFile", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Job), "StatgedOutputFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.StatgedOutputFile), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "JobStagedInputFile", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Job), "StagedInputFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.StagedInputFile), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "SimulationSimulationStagedInput", "Simulation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Simulation), "SimulationStagedInput", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.SimulationStagedInput), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "SimulationJob", "Simulation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Turbine.Data.Simulation), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.Job), true)]
[assembly: EdmRelationshipAttribute("Turbine.Data.Model", "UserSimulation", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Turbine.Data.User), "Simulation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Turbine.Data.Simulation), true)]

#endregion

namespace Turbine.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TurbineModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TurbineModelContainer object using the connection string found in the 'TurbineModelContainer' section of the application configuration file.
        /// </summary>
        public TurbineModelContainer() : base("name=TurbineModelContainer", "TurbineModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TurbineModelContainer object.
        /// </summary>
        public TurbineModelContainer(string connectionString) : base(connectionString, "TurbineModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TurbineModelContainer object.
        /// </summary>
        public TurbineModelContainer(EntityConnection connection) : base(connection, "TurbineModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Simulation> Simulations
        {
            get
            {
                if ((_Simulations == null))
                {
                    _Simulations = base.CreateObjectSet<Simulation>("Simulations");
                }
                return _Simulations;
            }
        }
        private ObjectSet<Simulation> _Simulations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Jobs
        {
            get
            {
                if ((_Jobs == null))
                {
                    _Jobs = base.CreateObjectSet<Job>("Jobs");
                }
                return _Jobs;
            }
        }
        private ObjectSet<Job> _Jobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SinterProcess> SinterProcesses
        {
            get
            {
                if ((_SinterProcesses == null))
                {
                    _SinterProcesses = base.CreateObjectSet<SinterProcess>("SinterProcesses");
                }
                return _SinterProcesses;
            }
        }
        private ObjectSet<SinterProcess> _SinterProcesses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProcessError> ProcessErrors
        {
            get
            {
                if ((_ProcessErrors == null))
                {
                    _ProcessErrors = base.CreateObjectSet<ProcessError>("ProcessErrors");
                }
                return _ProcessErrors;
            }
        }
        private ObjectSet<ProcessError> _ProcessErrors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobConsumer> JobConsumers
        {
            get
            {
                if ((_JobConsumers == null))
                {
                    _JobConsumers = base.CreateObjectSet<JobConsumer>("JobConsumers");
                }
                return _JobConsumers;
            }
        }
        private ObjectSet<JobConsumer> _JobConsumers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Sessions
        {
            get
            {
                if ((_Sessions == null))
                {
                    _Sessions = base.CreateObjectSet<Session>("Sessions");
                }
                return _Sessions;
            }
        }
        private ObjectSet<Session> _Sessions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StagedInputFile> StagedInputFiles
        {
            get
            {
                if ((_StagedInputFiles == null))
                {
                    _StagedInputFiles = base.CreateObjectSet<StagedInputFile>("StagedInputFiles");
                }
                return _StagedInputFiles;
            }
        }
        private ObjectSet<StagedInputFile> _StagedInputFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StatgedOutputFile> StatgedOutputFiles
        {
            get
            {
                if ((_StatgedOutputFiles == null))
                {
                    _StatgedOutputFiles = base.CreateObjectSet<StatgedOutputFile>("StatgedOutputFiles");
                }
                return _StatgedOutputFiles;
            }
        }
        private ObjectSet<StatgedOutputFile> _StatgedOutputFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InputFileType> InputFileTypes
        {
            get
            {
                if ((_InputFileTypes == null))
                {
                    _InputFileTypes = base.CreateObjectSet<InputFileType>("InputFileTypes");
                }
                return _InputFileTypes;
            }
        }
        private ObjectSet<InputFileType> _InputFileTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Applications
        {
            get
            {
                if ((_Applications == null))
                {
                    _Applications = base.CreateObjectSet<Application>("Applications");
                }
                return _Applications;
            }
        }
        private ObjectSet<Application> _Applications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OutputFileType> OutputFileTypes
        {
            get
            {
                if ((_OutputFileTypes == null))
                {
                    _OutputFileTypes = base.CreateObjectSet<OutputFileType>("OutputFileTypes");
                }
                return _OutputFileTypes;
            }
        }
        private ObjectSet<OutputFileType> _OutputFileTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SimulationStagedInput> SimulationStagedInputs
        {
            get
            {
                if ((_SimulationStagedInputs == null))
                {
                    _SimulationStagedInputs = base.CreateObjectSet<SimulationStagedInput>("SimulationStagedInputs");
                }
                return _SimulationStagedInputs;
            }
        }
        private ObjectSet<SimulationStagedInput> _SimulationStagedInputs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Simulations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSimulations(Simulation simulation)
        {
            base.AddObject("Simulations", simulation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobs(Job job)
        {
            base.AddObject("Jobs", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SinterProcesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSinterProcesses(SinterProcess sinterProcess)
        {
            base.AddObject("SinterProcesses", sinterProcess);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProcessErrors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProcessErrors(ProcessError processError)
        {
            base.AddObject("ProcessErrors", processError);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobConsumers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobConsumers(JobConsumer jobConsumer)
        {
            base.AddObject("JobConsumers", jobConsumer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sessions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessions(Session session)
        {
            base.AddObject("Sessions", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StagedInputFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStagedInputFiles(StagedInputFile stagedInputFile)
        {
            base.AddObject("StagedInputFiles", stagedInputFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatgedOutputFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatgedOutputFiles(StatgedOutputFile statgedOutputFile)
        {
            base.AddObject("StatgedOutputFiles", statgedOutputFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InputFileTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInputFileTypes(InputFileType inputFileType)
        {
            base.AddObject("InputFileTypes", inputFileType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Applications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplications(Application application)
        {
            base.AddObject("Applications", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OutputFileTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOutputFileTypes(OutputFileType outputFileType)
        {
            base.AddObject("OutputFileTypes", outputFileType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SimulationStagedInputs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSimulationStagedInputs(SimulationStagedInput simulationStagedInput)
        {
            base.AddObject("SimulationStagedInputs", simulationStagedInput);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        public static Application CreateApplication(global::System.String name)
        {
            Application application = new Application();
            application.Name = name;
            return application;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "ApplicationOutputFileType", "OutputFileType")]
        public EntityCollection<OutputFileType> OutputFileTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OutputFileType>("Turbine.Data.Model.ApplicationOutputFileType", "OutputFileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OutputFileType>("Turbine.Data.Model.ApplicationOutputFileType", "OutputFileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "ApplicationInputFileType", "InputFileType")]
        public EntityCollection<InputFileType> InputFileTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InputFileType>("Turbine.Data.Model.ApplicationInputFileType", "InputFileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InputFileType>("Turbine.Data.Model.ApplicationInputFileType", "InputFileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SimulationApplication", "Simulation")]
        public EntityCollection<Simulation> Simulations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Simulation>("Turbine.Data.Model.SimulationApplication", "Simulation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Simulation>("Turbine.Data.Model.SimulationApplication", "Simulation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "UserApplication", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserApplication", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserApplication", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserApplication", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Turbine.Data.Model.UserApplication", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="InputFileType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InputFileType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InputFileType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="required">Initial value of the Required property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        public static InputFileType CreateInputFileType(global::System.Guid id, global::System.Boolean required, global::System.String type, global::System.String applicationName)
        {
            InputFileType inputFileType = new InputFileType();
            inputFileType.Id = id;
            inputFileType.Required = required;
            inputFileType.Type = type;
            inputFileType.ApplicationName = applicationName;
            return inputFileType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Required
        {
            get
            {
                return _Required;
            }
            set
            {
                OnRequiredChanging(value);
                ReportPropertyChanging("Required");
                _Required = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Required");
                OnRequiredChanged();
            }
        }
        private global::System.Boolean _Required;
        partial void OnRequiredChanging(global::System.Boolean value);
        partial void OnRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "ApplicationInputFileType", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Turbine.Data.Model.ApplicationInputFileType", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Turbine.Data.Model.ApplicationInputFileType", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Turbine.Data.Model.ApplicationInputFileType", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Turbine.Data.Model.ApplicationInputFileType", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "StagedInputFileInputFileType", "StagedInputFile")]
        public EntityCollection<StagedInputFile> StagedInputFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StagedInputFile>("Turbine.Data.Model.StagedInputFileInputFileType", "StagedInputFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StagedInputFile>("Turbine.Data.Model.StagedInputFileInputFileType", "StagedInputFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SimulationStagedInputInputFileType", "SimulationStagedInput")]
        public EntityCollection<SimulationStagedInput> SimulationStagedInput
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SimulationStagedInput>("Turbine.Data.Model.SimulationStagedInputInputFileType", "SimulationStagedInput");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SimulationStagedInput>("Turbine.Data.Model.SimulationStagedInputInputFileType", "SimulationStagedInput", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="create">Initial value of the Create property.</param>
        /// <param name="guid">Initial value of the guid property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="simulationId">Initial value of the SimulationId property.</param>
        public static Job CreateJob(global::System.Int32 id, global::System.String state, global::System.DateTime create, global::System.Guid guid, global::System.Guid sessionId, global::System.String userName, global::System.Guid simulationId)
        {
            Job job = new Job();
            job.Id = id;
            job.State = state;
            job.Create = create;
            job.guid = guid;
            job.SessionId = sessionId;
            job.UserName = userName;
            job.SimulationId = simulationId;
            return job;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Create
        {
            get
            {
                return _Create;
            }
            set
            {
                OnCreateChanging(value);
                ReportPropertyChanging("Create");
                _Create = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Create");
                OnCreateChanged();
            }
        }
        private global::System.DateTime _Create;
        partial void OnCreateChanging(global::System.DateTime value);
        partial void OnCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Submit
        {
            get
            {
                return _Submit;
            }
            set
            {
                OnSubmitChanging(value);
                ReportPropertyChanging("Submit");
                _Submit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Submit");
                OnSubmitChanged();
            }
        }
        private Nullable<global::System.DateTime> _Submit;
        partial void OnSubmitChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Setup
        {
            get
            {
                return _Setup;
            }
            set
            {
                OnSetupChanging(value);
                ReportPropertyChanging("Setup");
                _Setup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Setup");
                OnSetupChanged();
            }
        }
        private Nullable<global::System.DateTime> _Setup;
        partial void OnSetupChanging(Nullable<global::System.DateTime> value);
        partial void OnSetupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Running
        {
            get
            {
                return _Running;
            }
            set
            {
                OnRunningChanging(value);
                ReportPropertyChanging("Running");
                _Running = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Running");
                OnRunningChanged();
            }
        }
        private Nullable<global::System.DateTime> _Running;
        partial void OnRunningChanging(Nullable<global::System.DateTime> value);
        partial void OnRunningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Finished
        {
            get
            {
                return _Finished;
            }
            set
            {
                OnFinishedChanging(value);
                ReportPropertyChanging("Finished");
                _Finished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Finished");
                OnFinishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Finished;
        partial void OnFinishedChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Initialize
        {
            get
            {
                return _Initialize;
            }
            set
            {
                OnInitializeChanging(value);
                ReportPropertyChanging("Initialize");
                _Initialize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Initialize");
                OnInitializeChanged();
            }
        }
        private global::System.Boolean _Initialize = false;
        partial void OnInitializeChanging(global::System.Boolean value);
        partial void OnInitializeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid guid
        {
            get
            {
                return _guid;
            }
            set
            {
                OnguidChanging(value);
                ReportPropertyChanging("guid");
                _guid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("guid");
                OnguidChanged();
            }
        }
        private global::System.Guid _guid;
        partial void OnguidChanging(global::System.Guid value);
        partial void OnguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.Guid _SessionId;
        partial void OnSessionIdChanging(global::System.Guid value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ConsumerId
        {
            get
            {
                return _ConsumerId;
            }
            set
            {
                OnConsumerIdChanging(value);
                ReportPropertyChanging("ConsumerId");
                _ConsumerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsumerId");
                OnConsumerIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ConsumerId;
        partial void OnConsumerIdChanging(Nullable<global::System.Guid> value);
        partial void OnConsumerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Reset
        {
            get
            {
                return _Reset;
            }
            set
            {
                OnResetChanging(value);
                ReportPropertyChanging("Reset");
                _Reset = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reset");
                OnResetChanged();
            }
        }
        private global::System.Boolean _Reset = true;
        partial void OnResetChanging(global::System.Boolean value);
        partial void OnResetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SimulationId
        {
            get
            {
                return _SimulationId;
            }
            set
            {
                OnSimulationIdChanging(value);
                ReportPropertyChanging("SimulationId");
                _SimulationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SimulationId");
                OnSimulationIdChanged();
            }
        }
        private global::System.Guid _SimulationId;
        partial void OnSimulationIdChanging(global::System.Guid value);
        partial void OnSimulationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "JobSinterProcess", "SinterProcess")]
        public SinterProcess Process
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SinterProcess>("Turbine.Data.Model.JobSinterProcess", "SinterProcess").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SinterProcess>("Turbine.Data.Model.JobSinterProcess", "SinterProcess").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SinterProcess> ProcessReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SinterProcess>("Turbine.Data.Model.JobSinterProcess", "SinterProcess");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SinterProcess>("Turbine.Data.Model.JobSinterProcess", "SinterProcess", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "JobMessage", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("Turbine.Data.Model.JobMessage", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("Turbine.Data.Model.JobMessage", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SessionJob", "Session")]
        public Session Session
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("Turbine.Data.Model.SessionJob", "Session").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("Turbine.Data.Model.SessionJob", "Session").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Session> SessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Session>("Turbine.Data.Model.SessionJob", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Session>("Turbine.Data.Model.SessionJob", "Session", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "UserJob", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserJob", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserJob", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserJob", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Turbine.Data.Model.UserJob", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "ConsumerJob", "Consumer")]
        public JobConsumer Consumer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobConsumer>("Turbine.Data.Model.ConsumerJob", "Consumer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobConsumer>("Turbine.Data.Model.ConsumerJob", "Consumer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobConsumer> ConsumerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobConsumer>("Turbine.Data.Model.ConsumerJob", "Consumer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobConsumer>("Turbine.Data.Model.ConsumerJob", "Consumer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "JobStatgedOutputFile", "StatgedOutputFile")]
        public EntityCollection<StatgedOutputFile> StatgedOutputFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StatgedOutputFile>("Turbine.Data.Model.JobStatgedOutputFile", "StatgedOutputFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StatgedOutputFile>("Turbine.Data.Model.JobStatgedOutputFile", "StatgedOutputFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "JobStagedInputFile", "StagedInputFile")]
        public EntityCollection<StagedInputFile> StagedInputFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StagedInputFile>("Turbine.Data.Model.JobStagedInputFile", "StagedInputFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StagedInputFile>("Turbine.Data.Model.JobStagedInputFile", "StagedInputFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SimulationJob", "Simulation")]
        public Simulation Simulation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Simulation>("Turbine.Data.Model.SimulationJob", "Simulation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Simulation>("Turbine.Data.Model.SimulationJob", "Simulation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Simulation> SimulationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Simulation>("Turbine.Data.Model.SimulationJob", "Simulation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Simulation>("Turbine.Data.Model.SimulationJob", "Simulation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="JobConsumer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobConsumer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobConsumer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="hostname">Initial value of the hostname property.</param>
        /// <param name="status">Initial value of the status property.</param>
        public static JobConsumer CreateJobConsumer(global::System.Guid id, global::System.String hostname, global::System.String status)
        {
            JobConsumer jobConsumer = new JobConsumer();
            jobConsumer.Id = id;
            jobConsumer.hostname = hostname;
            jobConsumer.status = status;
            return jobConsumer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String hostname
        {
            get
            {
                return _hostname;
            }
            set
            {
                OnhostnameChanging(value);
                ReportPropertyChanging("hostname");
                _hostname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("hostname");
                OnhostnameChanged();
            }
        }
        private global::System.String _hostname;
        partial void OnhostnameChanging(global::System.String value);
        partial void OnhostnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Memory
        {
            get
            {
                return _Memory;
            }
            set
            {
                OnMemoryChanging(value);
                ReportPropertyChanging("Memory");
                _Memory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Memory");
                OnMemoryChanged();
            }
        }
        private Nullable<global::System.Int64> _Memory;
        partial void OnMemoryChanging(Nullable<global::System.Int64> value);
        partial void OnMemoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Cores
        {
            get
            {
                return _Cores;
            }
            set
            {
                OnCoresChanging(value);
                ReportPropertyChanging("Cores");
                _Cores = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cores");
                OnCoresChanged();
            }
        }
        private Nullable<global::System.Int32> _Cores;
        partial void OnCoresChanging(Nullable<global::System.Int32> value);
        partial void OnCoresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CPU
        {
            get
            {
                return _CPU;
            }
            set
            {
                OnCPUChanging(value);
                ReportPropertyChanging("CPU");
                _CPU = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CPU");
                OnCPUChanged();
            }
        }
        private global::System.String _CPU;
        partial void OnCPUChanging(global::System.String value);
        partial void OnCPUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AMI
        {
            get
            {
                return _AMI;
            }
            set
            {
                OnAMIChanging(value);
                ReportPropertyChanging("AMI");
                _AMI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AMI");
                OnAMIChanged();
            }
        }
        private global::System.String _AMI;
        partial void OnAMIChanging(global::System.String value);
        partial void OnAMIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String image
        {
            get
            {
                return _image;
            }
            set
            {
                OnimageChanging(value);
                ReportPropertyChanging("image");
                _image = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("image");
                OnimageChanged();
            }
        }
        private global::System.String _image;
        partial void OnimageChanging(global::System.String value);
        partial void OnimageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String instance
        {
            get
            {
                return _instance;
            }
            set
            {
                OninstanceChanging(value);
                ReportPropertyChanging("instance");
                _instance = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("instance");
                OninstanceChanged();
            }
        }
        private global::System.String _instance;
        partial void OninstanceChanging(global::System.String value);
        partial void OninstanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String processId
        {
            get
            {
                return _processId;
            }
            set
            {
                OnprocessIdChanging(value);
                ReportPropertyChanging("processId");
                _processId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("processId");
                OnprocessIdChanged();
            }
        }
        private global::System.String _processId;
        partial void OnprocessIdChanging(global::System.String value);
        partial void OnprocessIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> keepalive
        {
            get
            {
                return _keepalive;
            }
            set
            {
                OnkeepaliveChanging(value);
                ReportPropertyChanging("keepalive");
                _keepalive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("keepalive");
                OnkeepaliveChanged();
            }
        }
        private Nullable<global::System.DateTime> _keepalive;
        partial void OnkeepaliveChanging(Nullable<global::System.DateTime> value);
        partial void OnkeepaliveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "ConsumerJob", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("Turbine.Data.Model.ConsumerJob", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("Turbine.Data.Model.ConsumerJob", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        public static Message CreateMessage(global::System.Guid id, global::System.String value, global::System.Int32 jobId)
        {
            Message message = new Message();
            message.Id = id;
            message.Value = value;
            message.JobId = jobId;
            return message;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "JobMessage", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobMessage", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobMessage", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobMessage", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("Turbine.Data.Model.JobMessage", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="OutputFileType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OutputFileType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OutputFileType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="required">Initial value of the Required property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        public static OutputFileType CreateOutputFileType(global::System.Guid id, global::System.String name, global::System.Boolean required, global::System.String type, global::System.String applicationName)
        {
            OutputFileType outputFileType = new OutputFileType();
            outputFileType.Id = id;
            outputFileType.Name = name;
            outputFileType.Required = required;
            outputFileType.Type = type;
            outputFileType.ApplicationName = applicationName;
            return outputFileType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Required
        {
            get
            {
                return _Required;
            }
            set
            {
                OnRequiredChanging(value);
                ReportPropertyChanging("Required");
                _Required = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Required");
                OnRequiredChanged();
            }
        }
        private global::System.Boolean _Required;
        partial void OnRequiredChanging(global::System.Boolean value);
        partial void OnRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "ApplicationOutputFileType", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Turbine.Data.Model.ApplicationOutputFileType", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Turbine.Data.Model.ApplicationOutputFileType", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Turbine.Data.Model.ApplicationOutputFileType", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Turbine.Data.Model.ApplicationOutputFileType", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "StatgedOutputFileOutputFileType", "StatgedOutputFile")]
        public EntityCollection<StatgedOutputFile> StatgedOutputFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StatgedOutputFile>("Turbine.Data.Model.StatgedOutputFileOutputFileType", "StatgedOutputFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StatgedOutputFile>("Turbine.Data.Model.StatgedOutputFileOutputFileType", "StatgedOutputFile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="ProcessError")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProcessError : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProcessError object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="error">Initial value of the Error property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="sinterProcessId">Initial value of the SinterProcessId property.</param>
        public static ProcessError CreateProcessError(global::System.Guid id, global::System.String name, global::System.String error, global::System.String type, global::System.Guid sinterProcessId)
        {
            ProcessError processError = new ProcessError();
            processError.Id = id;
            processError.Name = name;
            processError.Error = error;
            processError.Type = type;
            processError.SinterProcessId = sinterProcessId;
            return processError;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Error
        {
            get
            {
                return _Error;
            }
            set
            {
                OnErrorChanging(value);
                ReportPropertyChanging("Error");
                _Error = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Error");
                OnErrorChanged();
            }
        }
        private global::System.String _Error;
        partial void OnErrorChanging(global::System.String value);
        partial void OnErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SinterProcessId
        {
            get
            {
                return _SinterProcessId;
            }
            set
            {
                OnSinterProcessIdChanging(value);
                ReportPropertyChanging("SinterProcessId");
                _SinterProcessId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SinterProcessId");
                OnSinterProcessIdChanged();
            }
        }
        private global::System.Guid _SinterProcessId;
        partial void OnSinterProcessIdChanging(global::System.Guid value);
        partial void OnSinterProcessIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SinterProcessError", "SinterProcess")]
        public SinterProcess SinterProcessErrors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SinterProcess>("Turbine.Data.Model.SinterProcessError", "SinterProcess").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SinterProcess>("Turbine.Data.Model.SinterProcessError", "SinterProcess").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SinterProcess> SinterProcessErrorsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SinterProcess>("Turbine.Data.Model.SinterProcessError", "SinterProcess");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SinterProcess>("Turbine.Data.Model.SinterProcessError", "SinterProcess", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="create">Initial value of the Create property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static Session CreateSession(global::System.Guid id, global::System.DateTime create, global::System.String userName)
        {
            Session session = new Session();
            session.Id = id;
            session.Create = create;
            session.UserName = userName;
            return session;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Create
        {
            get
            {
                return _Create;
            }
            set
            {
                OnCreateChanging(value);
                ReportPropertyChanging("Create");
                _Create = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Create");
                OnCreateChanged();
            }
        }
        private global::System.DateTime _Create;
        partial void OnCreateChanging(global::System.DateTime value);
        partial void OnCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Submit
        {
            get
            {
                return _Submit;
            }
            set
            {
                OnSubmitChanging(value);
                ReportPropertyChanging("Submit");
                _Submit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Submit");
                OnSubmitChanged();
            }
        }
        private Nullable<global::System.DateTime> _Submit;
        partial void OnSubmitChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Finished
        {
            get
            {
                return _Finished;
            }
            set
            {
                OnFinishedChanging(value);
                ReportPropertyChanging("Finished");
                _Finished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Finished");
                OnFinishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Finished;
        partial void OnFinishedChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descrption
        {
            get
            {
                return _Descrption;
            }
            set
            {
                OnDescrptionChanging(value);
                ReportPropertyChanging("Descrption");
                _Descrption = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descrption");
                OnDescrptionChanged();
            }
        }
        private global::System.String _Descrption;
        partial void OnDescrptionChanging(global::System.String value);
        partial void OnDescrptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SessionJob", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("Turbine.Data.Model.SessionJob", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("Turbine.Data.Model.SessionJob", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "UserSession", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserSession", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserSession", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserSession", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Turbine.Data.Model.UserSession", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="Simulation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Simulation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Simulation object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="update">Initial value of the Update property.</param>
        /// <param name="create">Initial value of the Create property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Simulation CreateSimulation(global::System.String name, global::System.String applicationName, global::System.DateTime update, global::System.DateTime create, global::System.Guid id)
        {
            Simulation simulation = new Simulation();
            simulation.Name = name;
            simulation.ApplicationName = applicationName;
            simulation.Update = update;
            simulation.Create = create;
            simulation.Id = id;
            return simulation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Update
        {
            get
            {
                return _Update;
            }
            set
            {
                OnUpdateChanging(value);
                ReportPropertyChanging("Update");
                _Update = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Update");
                OnUpdateChanged();
            }
        }
        private global::System.DateTime _Update;
        partial void OnUpdateChanging(global::System.DateTime value);
        partial void OnUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Create
        {
            get
            {
                return _Create;
            }
            set
            {
                OnCreateChanging(value);
                ReportPropertyChanging("Create");
                _Create = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Create");
                OnCreateChanged();
            }
        }
        private global::System.DateTime _Create;
        partial void OnCreateChanging(global::System.DateTime value);
        partial void OnCreateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SimulationApplication", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Turbine.Data.Model.SimulationApplication", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Turbine.Data.Model.SimulationApplication", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Turbine.Data.Model.SimulationApplication", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Turbine.Data.Model.SimulationApplication", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SimulationSimulationStagedInput", "SimulationStagedInput")]
        public EntityCollection<SimulationStagedInput> SimulationStagedInputs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SimulationStagedInput>("Turbine.Data.Model.SimulationSimulationStagedInput", "SimulationStagedInput");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SimulationStagedInput>("Turbine.Data.Model.SimulationSimulationStagedInput", "SimulationStagedInput", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SimulationJob", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("Turbine.Data.Model.SimulationJob", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("Turbine.Data.Model.SimulationJob", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "UserSimulation", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserSimulation", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserSimulation", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Turbine.Data.Model.UserSimulation", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Turbine.Data.Model.UserSimulation", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="SimulationStagedInput")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SimulationStagedInput : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SimulationStagedInput object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="simulationId">Initial value of the SimulationId property.</param>
        public static SimulationStagedInput CreateSimulationStagedInput(global::System.Guid id, global::System.String name, global::System.Guid simulationId)
        {
            SimulationStagedInput simulationStagedInput = new SimulationStagedInput();
            simulationStagedInput.Id = id;
            simulationStagedInput.Name = name;
            simulationStagedInput.SimulationId = simulationId;
            return simulationStagedInput;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Content
        {
            get
            {
                return StructuralObject.GetValidValue(_Content);
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.Byte[] _Content;
        partial void OnContentChanging(global::System.Byte[] value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hash
        {
            get
            {
                return _Hash;
            }
            set
            {
                OnHashChanging(value);
                ReportPropertyChanging("Hash");
                _Hash = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hash");
                OnHashChanged();
            }
        }
        private global::System.String _Hash;
        partial void OnHashChanging(global::System.String value);
        partial void OnHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SimulationId
        {
            get
            {
                return _SimulationId;
            }
            set
            {
                OnSimulationIdChanging(value);
                ReportPropertyChanging("SimulationId");
                _SimulationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SimulationId");
                OnSimulationIdChanged();
            }
        }
        private global::System.Guid _SimulationId;
        partial void OnSimulationIdChanging(global::System.Guid value);
        partial void OnSimulationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SimulationStagedInputInputFileType", "InputFileType")]
        public InputFileType InputFileType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InputFileType>("Turbine.Data.Model.SimulationStagedInputInputFileType", "InputFileType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InputFileType>("Turbine.Data.Model.SimulationStagedInputInputFileType", "InputFileType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InputFileType> InputFileTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InputFileType>("Turbine.Data.Model.SimulationStagedInputInputFileType", "InputFileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InputFileType>("Turbine.Data.Model.SimulationStagedInputInputFileType", "InputFileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SimulationSimulationStagedInput", "Simulation")]
        public Simulation Simulation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Simulation>("Turbine.Data.Model.SimulationSimulationStagedInput", "Simulation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Simulation>("Turbine.Data.Model.SimulationSimulationStagedInput", "Simulation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Simulation> SimulationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Simulation>("Turbine.Data.Model.SimulationSimulationStagedInput", "Simulation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Simulation>("Turbine.Data.Model.SimulationSimulationStagedInput", "Simulation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="SinterProcess")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SinterProcess : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SinterProcess object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SinterProcess CreateSinterProcess(global::System.Guid id)
        {
            SinterProcess sinterProcess = new SinterProcess();
            sinterProcess.Id = id;
            return sinterProcess;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Stdout
        {
            get
            {
                return StructuralObject.GetValidValue(_Stdout);
            }
            set
            {
                OnStdoutChanging(value);
                ReportPropertyChanging("Stdout");
                _Stdout = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Stdout");
                OnStdoutChanged();
            }
        }
        private global::System.Byte[] _Stdout;
        partial void OnStdoutChanging(global::System.Byte[] value);
        partial void OnStdoutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Stderr
        {
            get
            {
                return StructuralObject.GetValidValue(_Stderr);
            }
            set
            {
                OnStderrChanging(value);
                ReportPropertyChanging("Stderr");
                _Stderr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Stderr");
                OnStderrChanged();
            }
        }
        private global::System.Byte[] _Stderr;
        partial void OnStderrChanging(global::System.Byte[] value);
        partial void OnStderrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkingDir
        {
            get
            {
                return _WorkingDir;
            }
            set
            {
                OnWorkingDirChanging(value);
                ReportPropertyChanging("WorkingDir");
                _WorkingDir = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkingDir");
                OnWorkingDirChanged();
            }
        }
        private global::System.String _WorkingDir;
        partial void OnWorkingDirChanging(global::System.String value);
        partial void OnWorkingDirChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Input
        {
            get
            {
                return _Input;
            }
            set
            {
                OnInputChanging(value);
                ReportPropertyChanging("Input");
                _Input = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Input");
                OnInputChanged();
            }
        }
        private global::System.String _Input;
        partial void OnInputChanging(global::System.String value);
        partial void OnInputChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Output
        {
            get
            {
                return _Output;
            }
            set
            {
                OnOutputChanging(value);
                ReportPropertyChanging("Output");
                _Output = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Output");
                OnOutputChanged();
            }
        }
        private global::System.String _Output;
        partial void OnOutputChanging(global::System.String value);
        partial void OnOutputChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "JobSinterProcess", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobSinterProcess", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobSinterProcess", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobSinterProcess", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("Turbine.Data.Model.JobSinterProcess", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "SinterProcessError", "ProcessError")]
        public EntityCollection<ProcessError> Errors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProcessError>("Turbine.Data.Model.SinterProcessError", "ProcessError");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProcessError>("Turbine.Data.Model.SinterProcessError", "ProcessError", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="StagedInputFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StagedInputFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StagedInputFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        public static StagedInputFile CreateStagedInputFile(global::System.Guid id, global::System.String name, global::System.Byte[] content, global::System.Int32 jobId)
        {
            StagedInputFile stagedInputFile = new StagedInputFile();
            stagedInputFile.Id = id;
            stagedInputFile.Name = name;
            stagedInputFile.Content = content;
            stagedInputFile.JobId = jobId;
            return stagedInputFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Content
        {
            get
            {
                return StructuralObject.GetValidValue(_Content);
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.Byte[] _Content;
        partial void OnContentChanging(global::System.Byte[] value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "StagedInputFileInputFileType", "InputFileType")]
        public InputFileType InputFileType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InputFileType>("Turbine.Data.Model.StagedInputFileInputFileType", "InputFileType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InputFileType>("Turbine.Data.Model.StagedInputFileInputFileType", "InputFileType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InputFileType> InputFileTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InputFileType>("Turbine.Data.Model.StagedInputFileInputFileType", "InputFileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InputFileType>("Turbine.Data.Model.StagedInputFileInputFileType", "InputFileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "JobStagedInputFile", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobStagedInputFile", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobStagedInputFile", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobStagedInputFile", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("Turbine.Data.Model.JobStagedInputFile", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="StatgedOutputFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StatgedOutputFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatgedOutputFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        public static StatgedOutputFile CreateStatgedOutputFile(global::System.Guid id, global::System.String name, global::System.Byte[] content, global::System.Int32 jobId)
        {
            StatgedOutputFile statgedOutputFile = new StatgedOutputFile();
            statgedOutputFile.Id = id;
            statgedOutputFile.Name = name;
            statgedOutputFile.Content = content;
            statgedOutputFile.JobId = jobId;
            return statgedOutputFile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Content
        {
            get
            {
                return StructuralObject.GetValidValue(_Content);
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.Byte[] _Content;
        partial void OnContentChanging(global::System.Byte[] value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "StatgedOutputFileOutputFileType", "OutputFileType")]
        public OutputFileType OutputFileType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutputFileType>("Turbine.Data.Model.StatgedOutputFileOutputFileType", "OutputFileType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutputFileType>("Turbine.Data.Model.StatgedOutputFileOutputFileType", "OutputFileType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OutputFileType> OutputFileTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OutputFileType>("Turbine.Data.Model.StatgedOutputFileOutputFileType", "OutputFileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OutputFileType>("Turbine.Data.Model.StatgedOutputFileOutputFileType", "OutputFileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "JobStatgedOutputFile", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobStatgedOutputFile", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobStatgedOutputFile", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("Turbine.Data.Model.JobStatgedOutputFile", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("Turbine.Data.Model.JobStatgedOutputFile", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Turbine.Data.Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="token">Initial value of the Token property.</param>
        public static User CreateUser(global::System.String name, global::System.String token)
        {
            User user = new User();
            user.Name = name;
            user.Token = token;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "UserApplication", "Application")]
        public EntityCollection<Application> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Turbine.Data.Model.UserApplication", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Turbine.Data.Model.UserApplication", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "UserJob", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("Turbine.Data.Model.UserJob", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("Turbine.Data.Model.UserJob", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "UserSession", "Session")]
        public EntityCollection<Session> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("Turbine.Data.Model.UserSession", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("Turbine.Data.Model.UserSession", "Session", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Turbine.Data.Model", "UserSimulation", "Simulation")]
        public EntityCollection<Simulation> Simulations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Simulation>("Turbine.Data.Model.UserSimulation", "Simulation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Simulation>("Turbine.Data.Model.UserSimulation", "Simulation", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
